openapi: 3.0.3
info:
  title: VLXTR API Gateway
  description: API Gateway for VLXTR services, handling authentication, authorization, and request routing.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://54.93.165.149:8080
    description: Production server
  - url: http://localhost:8080
    description: Local development server

security:
  - bearerAuth: []

tags:
  - name: Authentication
    description: Operations related to authentication and user management
  - name: System
    description: System operations and health checks

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticates a user and returns an access token
      operationId: login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/register:
    post:
      tags:
        - Authentication
      summary: User registration
      description: Registers a new user in Keycloak and returns activation URL
      operationId: register
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: Successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  activateUrl:
                    type: string
                    description: URL for completing registration or account activation
                    example: "https://allegro.pl/oauth/device?user_code=konradDeviceCode"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /test:
    get:
      tags:
        - System
      summary: Test endpoint
      description: Simple test endpoint to verify API gateway availability
      operationId: test
      security: []
      responses:
        "200":
          description: Test successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  test:
                    type: string
                    example: "ok"

  /actuator/health:
    get:
      tags:
        - System
      summary: Check system health
      description: Spring Boot Actuator health endpoint
      operationId: getHealth
      security: []
      responses:
        "200":
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "UP"
        "503":
          description: System is unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "DOWN"

  /actuator/info:
    get:
      tags:
        - System
      summary: Application information
      description: Spring Boot Actuator info endpoint
      operationId: getInfo
      security: []
      responses:
        "200":
          description: Application information
          content:
            application/json:
              schema:
                type: object

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username for authentication
          example: "john.doe"
        password:
          type: string
          description: User's password
          format: password
          example: "password123"

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
        - firstName
        - lastName
      properties:
        username:
          type: string
          description: Unique username for the new account
          example: "john.doe"
        email:
          type: string
          format: email
          description: User's email address
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          description: User's password
          example: "password123"
        firstName:
          type: string
          description: User's first name
          example: "John"
        lastName:
          type: string
          description: User's last name
          example: "Doe"

    AuthResponse:
      type: object
      properties:
        tokenType:
          type: string
          description: The type of token
          example: "Bearer"
        accessToken:
          type: string
          description: JWT access token
          example: "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJfX..."
        expiresIn:
          type: integer
          description: Token expiration time in seconds
          example: 300
        refreshToken:
          type: string
          description: JWT refresh token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refreshExpiresIn:
          type: integer
          description: Refresh token expiration time in seconds
          example: 1800

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Error type
          example: "Bad Request"
        message:
          type: string
          description: Detailed error message
          example: "Invalid username or password"
        path:
          type: string
          description: Path of the request that caused the error
          example: "/auth/login"
        timestamp:
          type: string
          format: date-time
          description: Time when the error occurred
          example: "2025-05-07T12:34:56.789Z"
