name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    name: Build All Modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build all modules
        run: mvn clean verify

  lint-openapi:
    name: Lint OpenAPI Specs
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install OpenAPI CLI
        run: npm install -g @redocly/cli

      - name: Validate Allegro API OpenAPI Spec
        run: redocly lint vlxtr-allegro-api/vlxtr-allegro-api.yaml

      - name: Validate Bambu API OpenAPI Spec
        run: redocly lint vlxtr-bambu-api/vlxtr-bambu-api.yaml

  check-allegro-changes:
    name: Check Allegro API Changes
    runs-on: ubuntu-latest
    needs: lint-openapi
    if: github.event_name == 'push' && success()
    outputs:
      changed: ${{ steps.detect_changes.outputs.allegro_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changes in Allegro API
        id: detect_changes
        run: |
          allegro_changed="false"
          if git diff --name-only HEAD^ HEAD | grep -q 'vlxtr-allegro-api.yaml'; then
            allegro_changed="true"
          fi
          echo "allegro_changed=$allegro_changed" >> $GITHUB_ENV
          echo "::set-output name=allegro_changed::$allegro_changed"

  deploy-allegro:
    name: Deploy Allegro API
    runs-on: ubuntu-latest
    needs: check-allegro-changes
    if: needs.check-allegro-changes.outputs.changed == 'true' && success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Configure GitHub Packages Authentication
        run: |
          mkdir -p ~/.m2
          echo "<settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.TOKEN_GITHUB }}</password>
              </server>
            </servers>
          </settings>" > ~/.m2/settings.xml

      - name: Increment version for Allegro API
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -pl vlxtr-allegro-api -q -DforceStdout)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_VERSION="$major.$minor.$((patch + 1))"
          mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false -pl vlxtr-allegro-api
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit updated version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git fetch origin master
          git checkout master
          
          git stash
          git pull --rebase origin master
          git stash pop || echo "No changes to apply"

          git add vlxtr-allegro-api/pom.xml
          git commit -m "Bump Allegro API client version to $NEW_VERSION"
          git push origin master

      - name: Deploy Allegro API
        run: mvn clean deploy -pl vlxtr-allegro-api
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  check-bambu-changes:
    name: Check Bambu API Changes
    runs-on: ubuntu-latest
    needs: lint-openapi
    if: github.event_name == 'push' && success()
    outputs:
      changed: ${{ steps.detect_changes.outputs.bambu_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changes in Bambu API
        id: detect_changes
        run: |
          bambu_changed="false"
          if git diff --name-only HEAD^ HEAD | grep -q 'vlxtr-bambu-api.yaml'; then
            bambu_changed="true"
          fi
          echo "bambu_changed=$bambu_changed" >> $GITHUB_ENV
          echo "::set-output name=bambu_changed::$bambu_changed"

  deploy-bambu:
    name: Deploy Bambu API
    runs-on: ubuntu-latest
    needs: check-bambu-changes
    if: needs.check-bambu-changes.outputs.changed == 'true' && success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Configure GitHub Packages Authentication
        run: |
          mkdir -p ~/.m2
          echo "<settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.TOKEN_GITHUB }}</password>
              </server>
            </servers>
          </settings>" > ~/.m2/settings.xml

      - name: Increment version for Bambu API
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -pl vlxtr-bambu-api -q -DforceStdout)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_VERSION="$major.$minor.$((patch + 1))"
          mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false -pl vlxtr-bambu-api
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit updated version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git fetch origin master
          git checkout master
          
          git stash
          git pull --rebase origin master
          git stash pop || echo "No changes to apply"

          git add vlxtr-bambu-api/pom.xml
          git commit -m "Bump Bambu API client version to $NEW_VERSION"
          git push origin master

      - name: Deploy Bambu API
        run: mvn clean deploy -pl vlxtr-bambu-api
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
